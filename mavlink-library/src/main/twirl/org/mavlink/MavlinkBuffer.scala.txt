@(__context: Context)@_header(__context)
package org.mavlink

import java.nio.ByteBuffer
import java.nio.ByteOrder

/** Utility functions for using ByteBuffers. */
class MavlinkBuffer {

  /**
   * Allocates a ByteBuffer for using in MAVLink message processing.
   * @@param direct specifies if a direct buffer should be used
   */
  def allocate(direct: Boolean = true) = {
    val buffer = if (direct) {
      ByteBuffer.allocateDirect(Packet.MaxPayloadLength)
    } else {
      val underlying = new Array[Byte](Packet.MaxPayloadLength)
      ByteBuffer.wrap(underlying)
    }
    buffer.order(ByteOrder.LITTLE_ENDIAN) // MAVLink uses little endian
  }

}